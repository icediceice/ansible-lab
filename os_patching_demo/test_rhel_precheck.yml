---
- name: Playbook Name
  hosts: rhelvm-5
  gather_facts: false
  become: true

  # >> 2gb in /var
  # 500Mb in /usr
  # 1Gb in /
  # 250Mb /boot

  vars:
    some_var: 'test variable'
    fs_check_val:
      - mount: '/'
        free_size_g: 1
        #free_size_b: 1073741824
        free_size_b: 5358223360
      - mount: '/usr'
        free_size_g: 0.5
        free_size_b: 524288000
      - mount: '/var'
        free_size_g: 2
        free_size_b: 2147483648      
      - mount: '/boot'
        free_size_g: 0.25
        free_size_b: 262144000   
  tasks:
    - name: 'Precheck | Get the precheck facts'
      ansible.builtin.setup:
      register: precheck_facts_result

    # - name: debug precheck_facts_result
    #   ansible.builtin.debug:
    #     var: precheck_facts_result

    # - name: debug precheck_facts_result
    #   ansible.builtin.debug:
    #     var: ansible_facts.mounts

    # - name: debug fs_check_val details
    #   ansible.builtin.debug:
    #     var: ansible_facts.mounts[item.mount]
    #   loop: "{{ fs_check_val }}"

    - name: debug fs_check size details
      ansible.builtin.debug:
        msg: " {{ item.mount }} has enough free space"
      when: size_avail > item.free_size_b
      vars:
        size_avail_json_query: "mounts[?mount==`{{ item.mount }}`].size_available | [0]"
        size_avail: "{{ ansible_facts | json_query(size_avail_json_query) | int }}"
      loop: "{{ fs_check_val }}"

    - name: 'Precheck : BLOCK : Check if we have enough free space in the required root volumes'
      block:
      # Check if we have enough space
        - name: 'Precheck : Check if enough free space on the required root volumes'
          ansible.builtin.assert:
            that:
              - size_avail  > item.free_size_b
            fail_msg: "{{ item.mount }} does not have enough free space. Required={{ item.free_size_b }} Available={{ size_avail }} "
            success_msg: "{{ item.mount }} has enough free space. Required={{ item.free_size_b }} Available={{ size_avail }} "
          vars:
            size_avail_json_query: "mounts[?mount==`{{ item.mount }}`].size_available | [0]"
            size_avail: "{{ ansible_facts | json_query(size_avail_json_query) | int }}"
          loop: "{{ fs_check_val }}"       