---
# tasks file for patch_linux
- name: 'Patch Linux | BLOCK - Patch and reboot only if pre_check is success'
  block:

    - name: 'Patching | Set default facts'
      ansible.builtin.set_fact:
        patch_fail: false
        patch_fail_stage: ''
        patch_fail_msg: ""   

    # Do Sanity Reboot
    # - name: 'Patching | Perform Sanity Reboot before patching'
    #   ansible.builtin.include_tasks:
    #     file: 'sanity_reboot.yml'
      #when: not patch_fail

    # Do Patching
    - name: 'Patching | Perform Patching'
      ansible.builtin.include_tasks:
        file: 'solaris_patching.yml'
      when: not patch_fail    

    # Do Post Patch Reboot
    # - name: 'Patching | Rebooting post update'
    #   ansible.builtin.include_tasks:
    #     file: 'reboot_after_patch.yml'
    #   when: not patch_fail 

    # Get the Last Yum history info
    # - name: 'PATCHING_RESULTS | Capture the yum update history'
    #   ansible.builtin.shell: yum history info
    #   register: yum_update_history_result
    #   when: 
    #     - yum_update_result.changed
    #     - not patch_fail

    # Capture Patching Results
    # - name: 'Patching | Capture Patching Results'
    #   ansible.builtin.include_tasks:
    #     file: 'capture_patching_results.yml'
    #   #when: not patch_fail 

  # when: 
  #   - pre_check[inventory_hostname] is defined
  #   - not pre_check[inventory_hostname].pre_check_fail
  
# Capture Patching Results
- name: 'Patching | Capture Patching Results'
  ansible.builtin.include_tasks:
    file: 'capture_patching_results.yml'
  #when: not patch_fail 